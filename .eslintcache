[{"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\index.js":"1","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\App.js":"2","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\serviceWorker.js":"3","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils\\theme.js":"4","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils\\constants.js":"5","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js":"6","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\Footer.js":"7","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\Header.jsx":"8","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\views\\InvoiceDashboard.js":"9","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\AddFormDialog.js":"10","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils.js":"11","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\InvoicePanelTable.jsx":"12","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\headCells.js":"13","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\AddDialogForm.js":"14","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\DeleteDialogForm.js":"15","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\DebounceAssignment.js":"16","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils\\DebounceData.js":"17","C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\EditDialogForm.js":"18"},{"size":776,"mtime":1615607567743,"results":"19","hashOfConfig":"20"},{"size":1335,"mtime":1615703891971,"results":"21","hashOfConfig":"20"},{"size":5226,"mtime":1589284044061,"results":"22","hashOfConfig":"20"},{"size":829,"mtime":1616350583229,"results":"23","hashOfConfig":"20"},{"size":92,"mtime":1616343850121,"results":"24","hashOfConfig":"20"},{"size":6611,"mtime":1615516515601,"results":"25","hashOfConfig":"20"},{"size":1243,"mtime":1589331154773,"results":"26","hashOfConfig":"20"},{"size":2171,"mtime":1616327428660,"results":"27","hashOfConfig":"20"},{"size":1187,"mtime":1616355245184,"results":"28","hashOfConfig":"20"},{"size":6477,"mtime":1616346900294,"results":"29","hashOfConfig":"20"},{"size":267,"mtime":1616087745498,"results":"30","hashOfConfig":"20"},{"size":12880,"mtime":1616404561454,"results":"31","hashOfConfig":"20"},{"size":1043,"mtime":1616355706427,"results":"32","hashOfConfig":"20"},{"size":9195,"mtime":1616151840837,"results":"33","hashOfConfig":"20"},{"size":5552,"mtime":1616353987910,"results":"34","hashOfConfig":"20"},{"size":3611,"mtime":1616303607134,"results":"35","hashOfConfig":"20"},{"size":1694,"mtime":1616269211168,"results":"36","hashOfConfig":"20"},{"size":5761,"mtime":1616353853307,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cwuk4b",{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\index.js",["79","80"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\App.js",["81","82","83","84"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\serviceWorker.js",[],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils\\constants.js",[],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\views\\CollectorDashboard.js",["85","86","87","88","89"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\Footer.js",["90","91","92"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\Header.jsx",[],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\views\\InvoiceDashboard.js",["93"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\AddFormDialog.js",["94","95","96","97","98","99","100","101","102","103","104"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils.js",[],["105","106"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\InvoicePanelTable.jsx",["107","108","109","110","111","112","113","114","115","116","117"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\headCells.js",[],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\AddDialogForm.js",["118"],"import React from \"react\";\r\nimport { makeStyles, styled } from \"@material-ui/core/styles\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent as MuiDialogContent,\r\n  DialogActions as MuiDialogActions,\r\n  IconButton,\r\n  Typography,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\n// import MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\nconst DialogTitle = (props) => {\r\n  const classes = useStyles();\r\n  const { children, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n};\r\n\r\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    width: \"50vh\",\r\n  },\r\n}));\r\n\r\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst initialState = {\r\n  order_id: \"\",\r\n  customer_name: \"\",\r\n  customer_id: \"\",\r\n  order_amt: \"\",\r\n  approval_status: \"\",\r\n  approved_by: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nexport default function AddDialogForm({ username, onChange, add }) {\r\n  const [info, setInfo] = React.useState(initialState);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedDate, setSelectedDate] = React.useState(\"\");\r\n  const [error, setError] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    onChange(!add);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    let name = username;\r\n    name = username.split(\"_\");\r\n    name = name[0] + \" \" + name[1];\r\n    let status;\r\n\r\n    if (info.order_amt <= 10000) {\r\n      setInfo({ ...info, approval_status: \"Approved\", approved_by: name });\r\n      status = \"Approved\";\r\n    } else {\r\n      setInfo({\r\n        ...info,\r\n        approval_status: \"Awaiting Approval\",\r\n        approved_by: \"\",\r\n      });\r\n      name = \"\";\r\n      status = \"Awaiting Approval\";\r\n    }\r\n\r\n    const config = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        customer_id: info.customer_id,\r\n        customer_name: info.customer_name,\r\n        order_id: info.order_id,\r\n        order_amt: info.order_amt,\r\n        status: status,\r\n        approved_by: name,\r\n        notes: info.notes,\r\n        date:\r\n          selectedDate +\r\n          ` ${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}`,\r\n      }),\r\n    };\r\n\r\n    setError(null);\r\n\r\n    fetch(\"http://localhost:8080/1705588/add\", config)\r\n      .then((res) => res.json())\r\n      .then(({ message }) => {\r\n        if (message === \"Success\") {\r\n          handleClick();\r\n          handleAdd();\r\n        } else {\r\n          setError(message);\r\n          handleClick();\r\n          handleAdd();\r\n        }\r\n        setInfo(initialState);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleAdd}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={add}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleAdd}\r\n          style={{ color: \"grey\" }}\r\n        >\r\n          Add New Order\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n              <Typography>Order ID</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={info.order_id}\r\n                error={\r\n                  info.order_id.length !== 6 && isNaN(parseInt(info.order_id))\r\n                }\r\n                helperText={\r\n                  info.order_id.length === 0 || info.order_id.length === 6\r\n                    ? \"\"\r\n                    : \"Order ID should be of 6 digits\"\r\n                }\r\n                onChange={(e) => setInfo({ ...info, order_id: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography>Customer Name</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                required\r\n                value={info.customer_name}\r\n                error={info.customer_name.length < 3}\r\n                helperText={\r\n                  info.customer_name.length === 0 ||\r\n                  info.customer_name.length >= 3\r\n                    ? \"\"\r\n                    : \"Customer Name should be of minimum 3 characters\"\r\n                }\r\n                onChange={(e) =>\r\n                  setInfo({ ...info, customer_name: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography>Customer ID</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={info.customer_id}\r\n                error={\r\n                  info.customer_id.length !== 3 &&\r\n                  isNaN(parseInt(info.customer_id))\r\n                }\r\n                helperText={\r\n                  info.customer_id.length === 0 || info.customer_id.length === 3\r\n                    ? \"\"\r\n                    : \"Customer ID should be of 3 digits\"\r\n                }\r\n                onChange={(e) =>\r\n                  setInfo({ ...info, customer_id: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography>Order Date</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                id=\"date-picker-dialog\"\r\n                type=\"date\"\r\n                style={{ width: \"12.5rem\" }}\r\n                value={selectedDate}\r\n                inputProps={{\r\n                  min: \"2012-01-01\",\r\n                  max:\r\n                    new Date().getFullYear() +\r\n                    \"-\" +\r\n                    (new Date().getMonth() + 1) +\r\n                    \"-\" +\r\n                    new Date().getDate(),\r\n                }}\r\n                onChange={(e) => {\r\n                  setSelectedDate(e.target.value);\r\n                }}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography>Order Amount</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                required\r\n                value={info.order_amt}\r\n                type=\"number\"\r\n                error={info.order_amt <= 100 || isNaN(parseInt(info.order_amt))}\r\n                helperText={\r\n                  info.order_amt >= 100 || info.order_amt === \"\"\r\n                    ? \"\"\r\n                    : \"Order amount should be greater than 100\"\r\n                }\r\n                onChange={(e) =>\r\n                  setInfo({ ...info, order_amt: e.target.value })\r\n                }\r\n              />{\" \"}\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Typography>Notes</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                value={info.notes}\r\n                onChange={(e) => setInfo({ ...info, notes: e.target.value })}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            disabled={\r\n              info.order_id.length !== 6 ||\r\n              info.customer_name.length < 3 ||\r\n              info.customer_id.length !== 3 ||\r\n              info.order_amt <= 100\r\n            }\r\n            onClick={handleAddNew}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>  \r\n        {/* {!!error ? (\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        ) : (\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Order Added\r\n          </Alert>\r\n        )} */}\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n",["119","120"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\DeleteDialogForm.js",["121","122"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\DebounceAssignment.js",["123","124","125","126","127"],"import React from 'react'\r\nimport { makeStyles, InputBase, Grid } from '@material-ui/core';\r\nimport  Paper from '@material-ui/core/Paper';\r\nimport  IconButton  from '@material-ui/core/IconButton';\r\nimport  SearchIcon from '@material-ui/icons/Search';\r\nimport { useEffect, useState } from 'react';\r\nimport Books from '../utils/DebounceData'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchpaper: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        height: '30px',\r\n        margin:'auto',\r\n        marginBottom:'5vh',\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 200,\r\n        border: `1px solid ${theme.palette.secondary.main}`,\r\n        color: 'white'\r\n    },\r\n    input: {\r\n        color: 'white',\r\n        fontSize: '0.6rem',\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    grid:{\r\n        backgroundColor:theme.palette.primary.main\r\n    }\r\n}))\r\n\r\n\r\nconst DebounceAssignment = () => {\r\n    \r\n    const classes = useStyles();\r\n    const [search,setSearch]=useState(null);\r\n\r\n    const debounce = (func) =>{\r\n        let timer;\r\n        return function(...args){\r\n          const context = this;\r\n          if(timer) clearTimeout(timer)\r\n          timer = setTimeout(() => {\r\n            timer = null\r\n            func.apply(context, args);\r\n          }, 3000);\r\n        }\r\n      }\r\n      const handleSearch = (e) => {\r\n        \r\n          console.log(e.target.value);\r\n          setSearch(e.target.value);\r\n      };\r\n    \r\n      const optimisedSearch = React.useCallback(debounce(handleSearch),[]);\r\n\r\n    const cardStyle = \r\n    {   border:'1px solid black',\r\n        backgroundColor:'cyan',\r\n        marginBottom:'3vh',\r\n        padding:'0.5vw'}\r\n\r\n      const setItems = Books.filter((data)=>{\r\n            if(search == null)\r\n                return data\r\n            else if(data.author.toLowerCase().includes(search.toLowerCase()))\r\n            {\r\n                return data\r\n            }\r\n          })\r\n    \r\n    const items = Books.filter((data)=>{\r\n        if(search == null)\r\n            return data\r\n        else if(data.author.toLowerCase().includes(search.toLowerCase()))\r\n        {\r\n            return data\r\n        }\r\n      }).map(data=>{\r\n        return(\r\n        <div>\r\n            <div style={cardStyle}>\r\n                <span ><b>Isbn: </b>{data.isbn}</span><br/>\r\n                <span ><b>Title: </b>{data.title}</span><br/>\r\n                <span ><b>Subtitle: </b>{data.subtitle}</span><br/>\r\n                <span ><b>Author: </b>{data.author}</span>\r\n            </div>\r\n        </div>\r\n        )\r\n      })\r\n\r\n    return (\r\n    <div>\r\n        <Grid container direction=\"column\" >\r\n                <Paper component=\"form\" className={classes.searchpaper} >\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search by Author Name\"\r\n                        inputProps={{ 'aria-label': 'Search by Author Name', size: 'small' }}\r\n                        onChange={optimisedSearch}\r\n                    />\r\n                    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon color=\"primary\" fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Paper>\r\n        </Grid>\r\n\r\n        <Paper style={{maxHeight: 400,maxWidth:500,margin:'auto',padding:'5vh 5vw', overflow: 'auto'}}\r\n        className={classes.grid}\r\n        >\r\n            {items}\r\n        </Paper>            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DebounceAssignment\r\n",["128","129"],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\utils\\DebounceData.js",[],"C:\\Users\\KIIT\\Desktop\\HRC UI\\Summer_Internship_UI\\src\\components\\EditDialogForm.js",["130","131","132","133"],{"ruleId":"134","severity":1,"message":"135","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":18},{"ruleId":"134","severity":1,"message":"138","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":20},{"ruleId":"134","severity":1,"message":"139","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"140","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":26},{"ruleId":"134","severity":1,"message":"141","line":6,"column":42,"nodeType":"136","messageId":"137","endLine":6,"endColumn":48},{"ruleId":"134","severity":1,"message":"142","line":10,"column":7,"nodeType":"136","messageId":"137","endLine":10,"endColumn":16},{"ruleId":"134","severity":1,"message":"139","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"143","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":23},{"ruleId":"134","severity":1,"message":"144","line":7,"column":10,"nodeType":"136","messageId":"137","endLine":7,"endColumn":19},{"ruleId":"134","severity":1,"message":"145","line":7,"column":32,"nodeType":"136","messageId":"137","endLine":7,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":173,"column":32,"nodeType":"148","messageId":"149","endLine":173,"endColumn":34},{"ruleId":"134","severity":1,"message":"150","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"139","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"151","line":32,"column":11,"nodeType":"136","messageId":"137","endLine":32,"endColumn":18},{"ruleId":"134","severity":1,"message":"152","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"153","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":21},{"ruleId":"134","severity":1,"message":"154","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":21},{"ruleId":"134","severity":1,"message":"155","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":25},{"ruleId":"134","severity":1,"message":"156","line":13,"column":8,"nodeType":"136","messageId":"137","endLine":13,"endColumn":22},{"ruleId":"134","severity":1,"message":"144","line":17,"column":8,"nodeType":"136","messageId":"137","endLine":17,"endColumn":17},{"ruleId":"134","severity":1,"message":"157","line":18,"column":10,"nodeType":"136","messageId":"137","endLine":18,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":61,"column":1,"nodeType":"160","messageId":"149","endLine":61,"endColumn":5},{"ruleId":"134","severity":1,"message":"161","line":76,"column":12,"nodeType":"136","messageId":"137","endLine":76,"endColumn":24},{"ruleId":"134","severity":1,"message":"162","line":76,"column":26,"nodeType":"136","messageId":"137","endLine":76,"endColumn":42},{"ruleId":"163","severity":1,"message":"164","line":169,"column":86,"nodeType":"165","endLine":169,"endColumn":101},{"ruleId":"163","severity":1,"message":"164","line":171,"column":65,"nodeType":"165","endLine":171,"endColumn":80},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"158","severity":1,"message":"170","line":76,"column":1,"nodeType":"160","messageId":"149","endLine":76,"endColumn":6},{"ruleId":"158","severity":1,"message":"159","line":81,"column":1,"nodeType":"160","messageId":"149","endLine":81,"endColumn":5},{"ruleId":"134","severity":1,"message":"171","line":153,"column":10,"nodeType":"136","messageId":"137","endLine":153,"endColumn":16},{"ruleId":"134","severity":1,"message":"172","line":154,"column":10,"nodeType":"136","messageId":"137","endLine":154,"endColumn":13},{"ruleId":"134","severity":1,"message":"173","line":154,"column":15,"nodeType":"136","messageId":"137","endLine":154,"endColumn":21},{"ruleId":"134","severity":1,"message":"174","line":155,"column":10,"nodeType":"136","messageId":"137","endLine":155,"endColumn":14},{"ruleId":"134","severity":1,"message":"175","line":155,"column":16,"nodeType":"136","messageId":"137","endLine":155,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":175,"column":6,"nodeType":"178","endLine":175,"endColumn":17,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":229,"column":27,"nodeType":"136","endLine":229,"endColumn":38},{"ruleId":"163","severity":1,"message":"164","line":325,"column":19,"nodeType":"165","endLine":325,"endColumn":43},{"ruleId":"163","severity":1,"message":"164","line":360,"column":29,"nodeType":"165","endLine":360,"endColumn":48},{"ruleId":"134","severity":1,"message":"181","line":81,"column":10,"nodeType":"136","messageId":"137","endLine":81,"endColumn":15},{"ruleId":"166","replacedBy":"182"},{"ruleId":"168","replacedBy":"183"},{"ruleId":"134","severity":1,"message":"184","line":86,"column":10,"nodeType":"136","messageId":"137","endLine":86,"endColumn":12},{"ruleId":"134","severity":1,"message":"185","line":86,"column":14,"nodeType":"136","messageId":"137","endLine":86,"endColumn":19},{"ruleId":"134","severity":1,"message":"186","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":19},{"ruleId":"176","severity":1,"message":"180","line":56,"column":31,"nodeType":"187","endLine":56,"endColumn":48},{"ruleId":"134","severity":1,"message":"188","line":64,"column":13,"nodeType":"136","messageId":"137","endLine":64,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":64,"column":43,"nodeType":"191","messageId":"192","endLine":64,"endColumn":45},{"ruleId":"189","severity":1,"message":"190","line":73,"column":38,"nodeType":"191","messageId":"192","endLine":73,"endColumn":40},{"ruleId":"166","replacedBy":"193"},{"ruleId":"168","replacedBy":"194"},{"ruleId":"158","severity":1,"message":"159","line":73,"column":7,"nodeType":"160","messageId":"149","endLine":73,"endColumn":11},{"ruleId":"134","severity":1,"message":"184","line":118,"column":10,"nodeType":"136","messageId":"137","endLine":118,"endColumn":12},{"ruleId":"134","severity":1,"message":"185","line":118,"column":14,"nodeType":"136","messageId":"137","endLine":118,"endColumn":19},{"ruleId":"134","severity":1,"message":"195","line":125,"column":9,"nodeType":"136","messageId":"137","endLine":125,"endColumn":21},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'theme' is defined but never used.","'CollectorDashboard' is defined but never used.","'Switch' is defined but never used.","'useStyles' is assigned a value but never used.","'pxToVh' is defined but never used.","'InputBase' is defined but never used.","'OutlinedInput' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'MuiDialogTitle' is defined but never used.","'Fragment' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"Duplicate key 'paper'.","'search' is assigned a value but never used.","'add' is assigned a value but never used.","'setAdd' is assigned a value but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'responseData'. Either include it or remove the dependency array. You can also do a functional update 'setResponseData(r => ...)' if you only need 'responseData' in the 'setResponseData' call.","ArrayExpression",["198"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'error' is assigned a value but never used.",["196"],["197"],"'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'useEffect' is defined but never used.","MemberExpression","'setItems' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["196"],["197"],"'handleRemove' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [pageCount, responseData]",{"range":"201","text":"202"},[4138,4149],"[pageCount, responseData]"]